name: CI/CD Pipeline

on:
  # Quando abrir Pull Request para develop ou main, ou quando fizer push na main
  pull_request:
    branches: [ "develop", "main" ]
  push:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and run tests
        run: mvn clean test

  deploy:
    # Só será executado se:
    # 1) O job "build_and_test" tiver sucesso (needs).
    # 2) O evento for um push (não PR) na branch main.
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build .jar (sem rodar testes de novo)
        run: mvn clean package -DskipTests

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EASYPANEL_SSH_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no deploy@SEU_IP_VPS << 'ENDSSH'
            # 1. Ir para a pasta onde está o repositório clonado na VPS
            cd /home/deploy/SEU_REPO

            # 2. Atualizar código
            git pull origin main

            # 3. Subir container (construindo localmente a imagem)
            docker-compose up -d --build
          ENDSSH